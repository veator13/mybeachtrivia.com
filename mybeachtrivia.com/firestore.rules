rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper: doc-based admin/owner check
    function isAdmin() {
      return request.auth != null && (
        // role field is a single string
        get(/databases/$(database)/documents/employees/$(request.auth.uid)).data.role in ['admin', 'owner']
        ||
        // roles field is a list/array and contains admin or owner
        (
          get(/databases/$(database)/documents/employees/$(request.auth.uid)).data.roles != null &&
          get(/databases/$(database)/documents/employees/$(request.auth.uid)).data.roles.hasAny(['admin','owner'])
        )
      );
    }

    match /employees/{uid} {
      // Read: user can read their own doc; admins can read anyone
      allow read: if (request.auth != null && request.auth.uid == uid) || isAdmin();

      // Write: only admins
      allow create, update, delete: if isAdmin();
    }

    // Everything else: deny by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
